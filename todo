<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <!-- Include Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        /* Add some basic CSS styles for better presentation */
        body {
            font-family: "Montserrat", Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        /* Style for the container */
        .container {
            background-color: #fff;
            padding: 20px;
            border: 2px solid #000;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            text-align: center;
        }

        /* Customize the checkbox */
        .checkbox {
            margin-right: 10px;
            width: 30px;
            height: 30px;
            vertical-align: middle;
        }

        /* Style for checked checkbox */
        .checkbox.checked::before {
            content: "âœ”";
            color: #000;
            font-size: 18px;
            position: relative;
            top: -4px;
        }

        /* Apply Montserrat font to the text and align it with the top of the checkboxes */
        .task-text {
            flex: 1;
            box-sizing: border-box;
            border: none;
            resize: none;
            outline: none;
            font-family: "Montserrat", Arial, sans-serif;
            font-size: 16px;
            vertical-align: top;
            max-width: 85ch; /* Limit the width to 85 characters */
        }

        /* Add doubled padding above the first checkbox and text */
        .todo-item:first-child {
            margin-top: 20px;
        }

        /* Style for the submit button */
        .submit-button {
            padding: 10px 20px;
            background-color: #ccc; /* Light grey */
            color: #000;
            border: none;
            cursor: pointer;
            font-family: "Montserrat", Arial, sans-serif;
            margin-top: 10px;
            transition: background-color 0.3s ease; /* Smooth transition for background color */
            border-radius: 20px; /* Rounded corners for the button */
        }

        /* Hover effect for the submit button */
        .submit-button:hover {
            background-color: #999; /* Change the background color on hover */
        }

        /* Style for the submit button when it's disabled */
        .submit-button:disabled {
            background-color: #ccc; /* Light grey for disabled state */
            cursor: not-allowed;
            opacity: 0.7;
        }

        /* Style for the timer section */
        .timer-section {
            margin-top: 20px;
        }

        /* Style for the timer number */
        .timer-number {
            font-size: 24px;
        }

        /* Style for the timer buttons */
        .timer-buttons {
            margin-top: 10px;
        }

        /* Style for the timer button */
        .timer-button {
            padding: 5px 10px;
            background-color: #ccc; /* Light grey */
            color: #000;
            border: none;
            cursor: pointer;
            font-family: "Montserrat", Arial, sans-serif;
            margin-right: 10px;
            transition: background-color 0.3s ease; /* Smooth transition for background color */
            border-radius: 20px; /* Rounded corners for the button */
        }

        /* Hover effect for the timer button */
        .timer-button:hover {
            background-color: #999; /* Change the background color on hover */
        }

        /* Style for the completed tasks section */
        .completed-tasks {
            margin-top: 20px;
            text-align: center; /* Center align the Completed Tasks section */
        }

        /* Style for completed task items */
        .completed-task-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        /* Style for the completed task text */
        .completed-task-text {
            font-size: 16px;
            margin-left: 10px;
        }

        /* Style for the edit and delete buttons */
        .edit-delete-buttons {
            display: flex;
            align-items: center;
            margin-left: auto;
        }

        /* Style for the edit button */
        .edit-button {
            background-color: #007BFF; /* Blue */
            color: #fff;
            border: none;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%; /* Rounded button */
            margin-left: 10px;
        }

        /* Style for the delete button */
        .delete-button {
            background-color: #FF0000; /* Red */
            color: #fff;
            border: none;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%; /* Rounded button */
            margin-left: 10px;
        }
    </style>
    <!-- Include Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <p>What will you do next? Keep it simple.</p>

        <div id="todo-list">
            <!-- Tasks will be added here dynamically -->
            <div class="todo-item">
                <input type="checkbox" class="checkbox">
                <textarea class="task-text" rows="1" maxlength="85" placeholder="Task 1"></textarea>
            </div>
            <div class="todo-item">
                <input type="checkbox" class="checkbox">
                <textarea class="task-text" rows="1" maxlength="85" placeholder="Task 2"></textarea>
            </div>
            <div class="todo-item">
                <input type="checkbox" class="checkbox">
                <textarea class="task-text" rows="1" maxlength="85" placeholder="Task 3"></textarea>
            </div>
        </div>

        <!-- Submit button initially disabled -->
        <button class="submit-button" id="submit" disabled>Finished</button>

        <!-- Timer section -->
        <div class="timer-section">
            <div class="timer-number" id="timer">00:00:00</div>
            <div class="timer-buttons">
                <button class="timer-button" id="start">Start</button>
                <button class="timer-button" id="pause" disabled>Pause</button>
                <button class="timer-button" id="reset">Reset</button>
            </div>
        </div>

        <!-- Completed tasks section -->
        <div class="completed-tasks">
            <h2>Completed Tasks</h2>
            <ul id="completed-task-list"></ul>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkboxes = document.querySelectorAll(".checkbox");
            const submitButton = document.getElementById("submit");
            const completedTaskList = document.getElementById("completed-task-list");
            const completedTasks = []; // Store completed tasks

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener("change", function () {
                    const taskItem = this.parentElement;
                    const taskText = taskItem.querySelector(".task-text").value;

                    if (this.checked) {
                        // Only move the task to the completed task list when checked
                        taskItem.classList.add("completed");
                        const completedTaskItem = document.createElement("li");
                        completedTaskItem.classList.add("completed-task-item");
                        completedTaskItem.innerHTML = `
                            <span class="completed-task-text">${taskText}</span>
                            <div class="edit-delete-buttons">
                                <button class="edit-button"><i class="fas fa-edit"></i></button>
                                <button class="delete-button"><i class="fas fa-trash-alt"></i></button>
                            </div>
                        `;
                        completedTaskList.appendChild(completedTaskItem);
                        const editButton = completedTaskItem.querySelector(".edit-button");
                        const deleteButton = completedTaskItem.querySelector(".delete-button");

                        editButton.addEventListener("click", function () {
                            const taskTextSpan = completedTaskItem.querySelector(".completed-task-text");
                            const editedTaskText = prompt("Edit the task:", taskTextSpan.textContent);
                            if (editedTaskText !== null) {
                                taskTextSpan.textContent = editedTaskText;
                            }
                        });

                        deleteButton.addEventListener("click", function () {
                            completedTaskList.removeChild(completedTaskItem);
                        });

                        // Add the task to the completedTasks array
                        completedTasks.push(taskText);
                    } else {
                        // Remove the task from the completed task list when unchecked
                        taskItem.classList.remove("completed");
                        const taskIndex = completedTasks.indexOf(taskText);
                        if (taskIndex !== -1) {
                            completedTasks.splice(taskIndex, 1);
                        }
                    }

                    const allCompleted = [...checkboxes].every(checkbox => checkbox.checked);
                    submitButton.disabled = !allCompleted;
                });
            });

            // Add event listener to the "Finished" button to clear checkbox text fields and uncheck checkboxes
            submitButton.addEventListener("click", function () {
                const taskTextareas = document.querySelectorAll(".task-text");
                taskTextareas.forEach(textarea => {
                    textarea.value = "";
                });

                // Uncheck checkboxes
                checkboxes.forEach(checkbox => {
                    checkbox.checked = false;
                });

                submitButton.disabled = true;
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            const startButton = document.getElementById("start");
            const pauseButton = document.getElementById("pause");
            const resetButton = document.getElementById("reset");
            const timerDisplay = document.getElementById("timer");

            let startTime;
            let timerInterval;
            let pausedTime = 0;

            function startTimer() {
                startTime = Date.now() - pausedTime;
                timerInterval = setInterval(updateTimer, 1000);
                startButton.disabled = true;
                pauseButton.disabled = false;
            }

            function pauseTimer() {
                clearInterval(timerInterval);
                startButton.disabled = false;
                pauseButton.disabled = true;
                pausedTime += Date.now() - startTime;
            }

            function resetTimer() {
                clearInterval(timerInterval);
                startButton.disabled = false;
                pauseButton.disabled = true;
                startTime = undefined;
                pausedTime = 0;
                updateTimer();
            }

            function updateTimer() {
                const currentTime = startTime ? Date.now() - startTime + pausedTime : pausedTime;
                const hours = Math.floor(currentTime / 3600000);
                const minutes = Math.floor((currentTime % 3600000) / 60000);
                const seconds = Math.floor((currentTime % 60000) / 1000);
                const formattedTime = `${String(hours).padStart(2, "0")}:${String(minutes).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
                timerDisplay.textContent = formattedTime;
            }

            startButton.addEventListener("click", startTimer);
            pauseButton.addEventListener("click", pauseTimer);
            resetButton.addEventListener("click", resetTimer);
        });
    </script>
</body>
</html>
